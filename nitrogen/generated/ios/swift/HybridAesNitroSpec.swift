///
/// HybridAesNitroSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridAesNitroSpec``
public protocol HybridAesNitroSpec_protocol: HybridObject {
  // Properties
  

  // Methods
  func encrypt(text: String, key: String, iv: String, algorithm: Algorithms) throws -> Promise<String>
  func decrypt(ciphertext: String, key: String, iv: String, algorithm: Algorithms) throws -> Promise<String>
  func encryptFile(key: String, iv: String, inputPath: String, outputPath: String) throws -> Promise<String>
  func decryptFile(key: String, iv: String, hmacKey: String, auth: String, inputPath: String, outputPath: String, paddingSize: Double) throws -> Promise<String>
  func hmac256(ciphertext: String, key: String) throws -> Promise<String>
  func hmac512(ciphertext: String, key: String) throws -> Promise<String>
  func randomKey(length: Double) throws -> Promise<String>
  func sha1(text: String) throws -> Promise<String>
  func sha256(text: String) throws -> Promise<String>
  func sha512(text: String) throws -> Promise<String>
}

/// See ``HybridAesNitroSpec``
public class HybridAesNitroSpec_base {
  private weak var cxxWrapper: HybridAesNitroSpec_cxx? = nil
  public func getCxxWrapper() -> HybridAesNitroSpec_cxx {
  #if DEBUG
    guard self is HybridAesNitroSpec else {
      fatalError("`self` is not a `HybridAesNitroSpec`! Did you accidentally inherit from `HybridAesNitroSpec_base` instead of `HybridAesNitroSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridAesNitroSpec_cxx(self as! HybridAesNitroSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the AesNitro HybridObject.
 * Implement this protocol to create Swift-based instances of AesNitro.
 * ```swift
 * class HybridAesNitro : HybridAesNitroSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridAesNitroSpec = HybridAesNitroSpec_protocol & HybridAesNitroSpec_base
