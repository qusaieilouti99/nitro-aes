///
/// JAlgorithms.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "Algorithms.hpp"

namespace margelo::nitro::nitroaes {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ enum "Algorithms" and the the Kotlin enum "Algorithms".
   */
  struct JAlgorithms final: public jni::JavaClass<JAlgorithms> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/nitroaes/Algorithms;";

  public:
    /**
     * Convert this Java/Kotlin-based enum to the C++ enum Algorithms.
     */
    [[maybe_unused]]
    [[nodiscard]]
    Algorithms toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldOrdinal = clazz->getField<int>("_ordinal");
      int ordinal = this->getFieldValue(fieldOrdinal);
      return static_cast<Algorithms>(ordinal);
    }

  public:
    /**
     * Create a Java/Kotlin-based enum with the given C++ enum's value.
     */
    [[maybe_unused]]
    static jni::alias_ref<JAlgorithms> fromCpp(Algorithms value) {
      static const auto clazz = javaClassStatic();
      static const auto fieldAES_128_CBC = clazz->getStaticField<JAlgorithms>("AES_128_CBC");
      static const auto fieldAES_192_CBC = clazz->getStaticField<JAlgorithms>("AES_192_CBC");
      static const auto fieldAES_256_CBC = clazz->getStaticField<JAlgorithms>("AES_256_CBC");
      
      switch (value) {
        case Algorithms::AES_128_CBC:
          return clazz->getStaticFieldValue(fieldAES_128_CBC);
        case Algorithms::AES_192_CBC:
          return clazz->getStaticFieldValue(fieldAES_192_CBC);
        case Algorithms::AES_256_CBC:
          return clazz->getStaticFieldValue(fieldAES_256_CBC);
        default:
          std::string stringValue = std::to_string(static_cast<int>(value));
          throw std::invalid_argument("Invalid enum value (" + stringValue + "!");
      }
    }
  };

} // namespace margelo::nitro::nitroaes
