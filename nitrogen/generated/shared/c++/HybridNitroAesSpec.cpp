///
/// HybridNitroAesSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "HybridNitroAesSpec.hpp"

namespace margelo::nitro::nitroaes {

  void HybridNitroAesSpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridMethod("pbkdf2", &HybridNitroAesSpec::pbkdf2);
      prototype.registerHybridMethod("encrypt", &HybridNitroAesSpec::encrypt);
      prototype.registerHybridMethod("decrypt", &HybridNitroAesSpec::decrypt);
      prototype.registerHybridMethod("encryptFile", &HybridNitroAesSpec::encryptFile);
      prototype.registerHybridMethod("decryptFile", &HybridNitroAesSpec::decryptFile);
      prototype.registerHybridMethod("hmac256", &HybridNitroAesSpec::hmac256);
      prototype.registerHybridMethod("hmac512", &HybridNitroAesSpec::hmac512);
      prototype.registerHybridMethod("randomKey", &HybridNitroAesSpec::randomKey);
      prototype.registerHybridMethod("sha1", &HybridNitroAesSpec::sha1);
      prototype.registerHybridMethod("sha256", &HybridNitroAesSpec::sha256);
      prototype.registerHybridMethod("sha512", &HybridNitroAesSpec::sha512);
    });
  }

} // namespace margelo::nitro::nitroaes
